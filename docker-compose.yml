version: '3'

services:

#  test
  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf

  nginx-proxy-letsencrypt:
    container_name: nginx-proxy-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy

#  end test

  nginx:
    image: nginx:1.17
    restart: always
    working_dir: ${APP_PATH_CONTAINER}
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
      - ${CONFIG_NGINX}:/etc/nginx/nginx.conf
    environment:
      - VIRTUAL_HOST=api.${SERVER_HOST}
      - LETSENCRYPT_HOST=api.${SERVER_HOST}
      - LETSENCRYPT_EMAIL=rusel91@idz.ru

  php:
    build: ./php
    restart: always
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/backend


  db:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ${DB_PATH_HOST}:/var/lib/mysql


  redis:
    image: redis:5.0-alpine
    restart: always
    ports:
      - 6370:6379 # 6379 in use reg ru server
    volumes:
      - ./storage/redis/data:/data
    command: ["sh", "-c", "exec redis-server --requirepass \"${REDIS_PASSWORD}\""]

  nodejs:
    image: node:11.13.0-alpine
    container_name: nuxt_app
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/frontend
    ports:
      - 3000:3000
    command: >
      ${NODE_COMMAND}
    depends_on:
      - redis
    expose:
      - 3000
    environment:
      - ENV_HOST:0.0.0.0
      - VIRTUAL_HOST=${SERVER_HOST}
      - LETSENCRYPT_HOST=${SERVER_HOST}
      - LETSENCRYPT_EMAIL=rusel91@idz.ru


  echo:
    image: node:11.13.0-alpine
    container_name: echo_app
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
      - ./.env:${APP_PATH_CONTAINER}/echoServer/.env
    working_dir: ${APP_PATH_CONTAINER}/echoServer
#    expose:
#      - 6001
    ports:
      - 6001:6001
    command: >
      sh -c "yarn install && node laravel-echo-server.js"
    environment:
      - VIRTUAL_HOST=ws.${SERVER_HOST}
#      - VIRTUAL_PORT=6001
      - LETSENCRYPT_HOST=ws.${SERVER_HOST}
      - LETSENCRYPT_EMAIL=rusel91@idz.ru

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    environment:
      - VIRTUAL_HOST=egdb.${SERVER_HOST}
      - LETSENCRYPT_HOST=egdb.${SERVER_HOST}
      - LETSENCRYPT_EMAIL=rusel91@idz.ru


volumes:
  certs:
  vhost.d:
  html: