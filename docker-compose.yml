version: '3'

services:
  nginx:
    image: nginx:1.17
    restart: always
    ports:
      # backend
      - 8000:8080
      # frontend
      - 443:443
      # nuxt nginx proxy
      - 80:3000
    working_dir: ${APP_PATH_CONTAINER}
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
      - ${CONFIG_NGINX}:/etc/nginx/nginx.conf

  php:
    build: ./php
    restart: always
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/backend
    environment:
      - APP_PATH_HOST=${APP_PATH_HOST}
      - APP_PATH_CONTAINER=${APP_PATH_CONTAINER}
    ports:
      - 9001:9001
    depends_on:
      - redis
      - db

  db:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ${DB_PATH_HOST}:/var/lib/mysql

#  composer:
#    image: composer
#    volumes:
#      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
#    working_dir: ${APP_PATH_CONTAINER}/backend
#    command: composer install

#  pm2:
#    build: ./pm2
#    restart: always
#    volumes:
#      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
#    working_dir: ${APP_PATH_CONTAINER}/backend
#    ports:
#      - 6001:6001
#    command: [ "pm2-runtime", "start", "pm2.json" ]

  redis:
    image: redis:5.0-alpine
    restart: always
    ports:
      - 6370:6379 # 6379 in use reg ru server
    volumes:
      - ./storage/redis/data:/data
    command: ["sh", "-c", "exec redis-server --requirepass \"${REDIS_PASSWORD}\""]

  nodejs:
    image: node:11.13.0-alpine
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/frontend
    ports:
      - 3000:3000
    container_name: nuxt_app
    command: >
      sh -c "yarn install && yarn run dev"
    depends_on:
      - redis
    expose:
      - 3000
    environment:
      ENV HOST: 0.0.0.0

  echo:
    image: node:11.13.0-alpine
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/echoServer
    expose:
      - 6001
    ports:
      - 6001:6001
    command: >
      sh -c "yarn install && node laravel-echo-server.js"


  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
